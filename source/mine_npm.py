#
#  Copyright (c) 2015 nexB Inc. and others. All rights reserved.
#

from __future__ import absolute_import

import json
import logging

import packagedcode

from spats.analyze_repodata import download


logger = logging.getLogger(__name__)


"""
Generate NPM objects based on the URLs :
- 'https://registry.npmjs.org/-/all/static/all.json'
- 'https://registry.npmjs.org/'
- 'https://skimdb.npmjs.com/registry/'
"""


def get_npm_names(location):
    """
    Parse a JSON file at location and return a list of NPM packages in the JSON file.
    The JSON file is downloaded from the URL 'https://registry.npmjs.org/-/all/static/all.json'
    """
    with open(location, 'rb') as json_file:
        json_data = json.load(json_file)
#   removing the '_updated' key which has the time of update
    json_data.pop('_updated')
    pkg_names = []
    for id, metadata in json_data.iteritems():
        pkg_names.append(metadata.get('name'))
    return pkg_names


def get_npm_packages(location):
    """
    Generate NPM packages from the JSON file at location which is generated by URLs like :
    https://skimdb.npmjs.com/registry/amulet for the component 'amulet'
    """
    with open(location, 'rb') as json_file:
        json_data_dict = json.load(json_file)
        packages = []
        for version, metadata in json_data_dict['versions'].iteritems():
            packages.append(packagedcode.npm.NpmPackage
                (
                    name=metadata.get('name'),
                    description=metadata.get('description'),
                    version=version,
                    homepage_url=metadata.get('homepage'),
                    id=metadata.get('_id')
                )
            )
        return packages


def get_npm_package_objects(json_url):
    """
    'json_url' contains a JSON file which has a dictionary of meta-data about all the NPM packages.
    Return all the NPM packages including all the versions available for each and every package
    """
    file_path = download(json_url, file_ext='.json')
    pkg_names = get_npm_names(file_path)
    packages = []
    for pkg_name in pkg_names:
        packages = packages + get_npm_packages(download('https://skimdb.npmjs.com/registry/' + pkg_name))
    return packages
